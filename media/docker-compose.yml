services:

  vpn:
    container_name: nordvpn
    image: tmknight88/nordvpn:latest
    restart: always
    cap_add:
      - NET_ADMIN
    environment: # Review https://github.com/tmknight/docker-nordvpn/#environment-variables
      Technology: NordLynx
      FIREWALL: TRUE
      KILLSWITCH: TRUE
      CHECK_CONNECTION_INTERVAL: 90
      REFRESH_CONNECTION_INTERVAL: 120
      CONNECTION_FILTERS: "[servers_groups][identifier]=legacy_p2p&filters[country_id]=209" # Switzerland P2P
      TOKEN: "<insert generated token here>"
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1 # Recommended if using ipv4 only
    ports:
      - 8080:8080  # sabnzdb
      - 8090:8090  # qbittorrent
      - 7878:7878  # radarr
      - 8989:8989  # sonarr
      - 9696:9696  # prowlarr
    networks:
      proxy:
        ipv4_address: 172.21.0.7

  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - WEBUI_PORT=8090
      - TORRENTING_PORT=6881
    volumes:
      - ./qbittorrent/config:/config:rw
      - ./qbittorrent/torrents:/data/torrents:rw
    network_mode: service:vpn
    depends_on:
      vpn:
        condition: service_healthy

  sabnzbd:
    container_name: sabnzbd
    image: lscr.io/linuxserver/sabnzbd:nightly
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - ./sabnzbd/config:/config:rw
      - ./sabnzbd/usenet:/data/usenet:rw
    network_mode: service:vpn
    depends_on:
      vpn:
        condition: service_healthy

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - ./prowlarr/config:/config:rw
      - ./qbittorrent/torrents:/data/torrents:rw
      - ./sabnzbd/usenet:/data/usenet:rw
    network_mode: service:vpn
    depends_on:
      vpn:
        condition: service_healthy

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - ./radarr/config:/config:rw
      - ./qbittorrent/torrents:/data/torrents:rw
      - ./sabnzbd/usenet:/data/usenet:rw
      - ./data/movies:/data/movies:rw
    network_mode: service:vpn
    depends_on:
      vpn:
        condition: service_healthy

  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - ./sonarr/config:/config:rw
      - ./qbittorrent/torrents:/data/torrents:rw
      - ./sabnzbd/usenet:/data/usenet:rw
      - ./data/shows:/data/shows:rw
    network_mode: service:vpn
    depends_on:
      vpn:
        condition: service_healthy

  jellyfin:
    container_name: jellyfin
    image: lscr.io/linuxserver/jellyfin:latest
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      # For Hardware acceleration read https://docs.linuxserver.io/images/docker-jellyfin/
      #- DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel   # example for Intel OpenCL
    volumes:
      - ./jellyfin/config:/config:rw
      - ./data/movies:/data/movies:rw
      - ./data/shows:/data/shows:rw
      #- /dev/shm:/transcode    # For transcoding to RAM if enabled and configured
    #devices:
       #- /dev/dri/:/dev/dri/   # For hardware acceleration. Read https://docs.linuxserver.io/images/docker-jellyfin/ for arch specific implementation. 
    ports:
      - 8096:8096
      - 7359:7359/udp   # Client Discovery. Allows clients to discover Jellyfin on the local network.
      - 1900:1900/udp   # Service Discovery.
    networks:
      proxy:
        ipv4_address: 172.21.0.8

  jellyseerr:
    container_name: jellyseerr
    image: fallenbagel/jellyseerr:latest
    restart: unless-stopped
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/Berlin
    volumes:
      - ./jellyseerr/config:/app/config:rw
    ports:
      - 5055:5055
    networks:
      proxy:
        ipv4_address: 172.21.0.9

networks:
  proxy:
    external: true